substitutions:
  devicename: climate-mhi-ceiling
  device_name: "Climate-ceiling"
  mhi_device_id: climate_mhi_c
  device_id: "climate_m_c"
  upper_devicename: "Climate-MHI-C"
  brand: "MHI"
  model_name: "Climate-ceiling"

esphome:
  name: $devicename
  friendly_name: ${upper_devicename}
  comment: ESP32C3 for $model_name
  min_version: "2025.7"
  name_add_mac_suffix: true  
  project:
    name: "$brand.$model_name"
    version: "ESP32C3" #hardware
  on_boot:
    - priority: -100.0
      then:
        - switch.turn_on: ${device_id}_active_mode

external_components:
  - source: github://hberntsen/mhi-ac-ctrl-esp32-c3/esphome
    components: [ MhiAcCtrl ]
    #refresh: 0s

esp32:
  board: airm2m_core_esp32c3
  framework:
    type: esp-idf

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${devicename}
    password: "12345678"

captive_portal:

# Enable logging
logger:
  #baud_rate: 0 # disable serial logging;
  #level: INFO

# Enable Home Assistant API
api:

ota:
  - platform: esphome
  - platform: web_server

web_server:
    
status_led:
  pin:
    number: GPIO8 # Blue LED   
    #inverted: True
    
# optional binary sensor to monitor serial connection:
binary_sensor:
  - platform: status
    name: "Status"

  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    # Defrosting sensor via operation data
    defrosting:
      name: "Defrosting"

button:
  - platform: safe_mode
    name: "Safe Mode Boot"
    entity_category: diagnostic
  - platform: restart
    name: "ESP32 Restart"
    
MhiAcCtrl:
  id: ${mhi_device_id}
  # Optional PIN config
  # The default values are:
  use_long_frame: false
  mosi_pin: GPIO6 
  miso_pin: GPIO5 
  sclk_pin: GPIO4 
  cs_in_pin: GPIO7 
  cs_out_pin: GPIO10

climate:
  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    id: ${device_id}
    name: "${devicename}"

select:
  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    vanes_ud:
      name: "Vanes Up Down"
      id: ${device_id}_vanes_ud
    #vanes_lr:
    #  name: "Vanes Left Right"
    #  id: ${device_id}_vanes_lr

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 120s

  - platform: uptime
    name: "Uptime"
    filters:
      - lambda: return x / 3600;
    unit_of_measurement: "h"
    accuracy_decimals: 1

  - platform: internal_temperature
    name: "ESP Temperature"
    
  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    integrated_total_energy:
      name: "Energy"
      filters:
        - throttle: 60s
    power:
      name: "Power"
    frame_errors:
      name: "Frame errors"
    # Special sensor to filter out bursts of (small) temperature changes. When
    # this sensor is present, the current temperature in the climate component
    # will use the filtered value from this sensor..
    #
    # Use case: filtering out temperature jitter. See
    # https://github.com/hberntsen/mhi-ac-ctrl-esp32-c3/issues/5
    climate_current_temperature:
      name: "Indoor temperature"
      id: climate_current_temperature
      filters:
        # Check for new temperatures every 10 seconds
        - heartbeat: 10s
        # Home assistant does not show decimals
        - round: 0
        # The climate component will only send updates if the value is different
    outdoor_air_temperature:
      name: "Outdoor temperature"
    current:
      name: "Current"

text_sensor:
  - platform: version
    name: "ESPHome Version"
  - platform: wifi_info
    ip_address:
      name: "IP Address"

interval:
  - interval: 2s
    then:
      - if:
          condition:
            switch.is_off: ${device_id}_active_mode
          then:
            - switch.turn_on: ${device_id}_active_mode


switch:
  - platform: MhiAcCtrl
    mhi_ac_ctrl_id: ${mhi_device_id}
    active_mode:
      name: "Active mode"
      id: ${device_id}_active_mode
      restore_mode: ALWAYS_ON
